---
import { Icon } from 'astro-icon';
import { Picture } from '@astrojs/image/components';
import Tags from '~/components/realisations/Tags.astro';

import { REALISATIONS } from '~/config.mjs';
import type { Realisation } from '~/types';

import { getPermalink } from '~/utils/permalinks';
import { findImage } from '~/utils/images';
import { getFormattedDate } from '~/utils/utils';

export interface Props {
  post: Realisation;
}

const { post } = Astro.props;
const image = await findImage(post.image);

const link = !REALISATIONS?.post?.disabled ? getPermalink(post.permalink, 'realisation') : '';
---

<article class={`max-w-md mx-auto md:max-w-none grid gap-6 md:gap-8 ${image ? 'md:grid-cols-2' : ''}`}>
  {
    image && (
      <a class="group relative block" href={link ?? 'javascript:void(0)'}>
        <div class="relative h-0 overflow-hidden rounded bg-gray-400 pb-[56.25%] shadow-lg md:h-72  md:pb-[75%] lg:pb-[56.25%]">
          {image && (
            <Picture
              src={image}
              class="absolute inset-0 mb-6 h-full w-full rounded bg-gray-400 object-cover shadow-lg "
              widths={[400, 900]}
              sizes="(max-width: 900px) 400px, 900px"
              alt={post.title}
              aspectRatio="16:9"
              loading="lazy"
              decoding="async"
            />
          )}
        </div>
      </a>
    )
  }
  <div class="mt-2">
    <header>
      <div class="mb-1">
        <span class="text-sm">
          <Icon name="tabler:clock" class="w-3.5 h-3.5 inline-block -mt-0.5" />
          <time datetime={String(post.publishDate)}>{getFormattedDate(post.publishDate)}</time>
          <!-- {
            post.tags && (
              <>
                {' '}
                Â·{' '}

                <a class="capitalize hover:underline" href={getPermalink(post.tags, 'category')}>
                  {post.tags.replaceAll('-', ' ')}
                </a>
              </>
            )
          } -->
        </span>
      </div>
      <h2 class="mb-2 font-heading text-xl font-bold leading-tight sm:text-2xl">
        {
          link ? (
            <a class="hover:text-primary  transition duration-200 ease-in" href={link}>
              {post.title}
            </a>
          ) : (
            post.title
          )
        }
      </h2>
    </header>

    {post.accroche && <p class="text-muted flex-grow text-lg">{post.accroche}</p>}
    <footer class="mt-5">
      <Tags tags={post.tags} />
    </footer>
  </div>
</article>
