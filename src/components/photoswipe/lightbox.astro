---
import 'photoswipe/style.css';
import 'photoswipe-dynamic-caption-plugin/photoswipe-dynamic-caption-plugin.css';
import { Image } from '@astrojs/image/components';
import { findImage } from '~/utils/images';

export interface Props {
  id: string;
  images: string[];
}

const { id, images } = Astro.props;

const imageSrcs = await Promise.all(images.map((image) => findImage(image)));
const imagetitles = images.map((image) => image.slice(0, image.lastIndexOf('.')).slice(image.lastIndexOf('/') + 1));
---

<style>
  .pswp__dynamic-caption {
    display: none;
  }
</style>

<lightbox-inner data-id={id}>
  {
    imageSrcs.map((image, i) => (
      <figure
        itemscope
        itemtype="http://schema.org/ImageObject"
        class="inline-block rounded bg-gray-300 text-center text-gray-800 dark:bg-gray-800 dark:text-gray-300"
      >
        <a href={image.src} itemprop="contentUrl" data-pswp-width={image.width} data-pswp-height={image.height}>
          <Image
            src={image}
            alt={imagetitles[i]}
            width={image.width}
            height={image.height}
            format="webp"
            class="rounded"
          />
          <span class="pswp-caption-content">{imagetitles[i]}</span>
        </a>
      </figure>
    ))
  }
</lightbox-inner>
<script>
  import PhotoSwipeLightbox from 'photoswipe/lightbox';
  import PhotoSwipeDynamicCaption from 'photoswipe-dynamic-caption-plugin';

  class LightboxInner extends HTMLElement {
    constructor() {
      super();

      const id = this.dataset.id;

      const lightbox = new PhotoSwipeLightbox({
        mainClass: 'pswp--custom-icon-colors',
        gallerySelector: '#' + id,
        childSelector: 'a',
        pswpModule: () => import('photoswipe'),
        paddingFn: (viewportSize) => {
          return {
            top: 0,
            bottom: 0,
            left: 0,
            right: 0,
          };
        },
      });

      const captionPlugin = new PhotoSwipeDynamicCaption(lightbox, {
        captionContent: '.pswp-caption-content',
        type: 'auto',
      });

      lightbox.init();
    }
  }

  customElements.define('lightbox-inner', LightboxInner);
</script>
